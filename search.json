[{"path":"https://spatlyu.github.io/HSAR/articles/hsar.html","id":"an-application-of-hsar-for-asking-prices-in-the-municipality-of-athens","dir":"Articles","previous_headings":"","what":"An application of HSAR for asking prices in the municipality of Athens","title":"Hierarchical Spatial Simultaneous Autoregressive Model (HSAR)","text":"application hsar(), based rel data, illustrated. design weight matrices needed random effect design matrix explained.","code":""},{"path":"https://spatlyu.github.io/HSAR/articles/hsar.html","id":"libraries","dir":"Articles","previous_headings":"An application of HSAR for asking prices in the municipality of Athens","what":"Libraries","title":"Hierarchical Spatial Simultaneous Autoregressive Model (HSAR)","text":"start loading libraries used.","code":"library(sf) ## Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.3.1; sf_use_s2() is TRUE library(spdep) ## Loading required package: spData library(tidyverse) ## ── Attaching core tidyverse packages ─────────────────────────────────────────── tidyverse 2.0.0 ── ## ✔ dplyr     1.1.4     ✔ readr     2.1.5 ## ✔ forcats   1.0.0     ✔ stringr   1.5.1 ## ✔ ggplot2   3.5.1     ✔ tibble    3.2.1 ## ✔ lubridate 1.9.3     ✔ tidyr     1.3.1 ## ✔ purrr     1.0.2 ## ── Conflicts ───────────────────────────────────────────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ dplyr::lag()    masks stats::lag() ## ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors library(HSAR)"},{"path":"https://spatlyu.github.io/HSAR/articles/hsar.html","id":"reading-the-datasets","dir":"Articles","previous_headings":"An application of HSAR for asking prices in the municipality of Athens","what":"Reading the datasets","title":"Hierarchical Spatial Simultaneous Autoregressive Model (HSAR)","text":"higher level, seven departments municipality Athens lower level point data properties.  characteristics come areal data id department, number airbnb properties, number museums, population, number citizens origin non european union country, area green space (m^2) area polygon (km^2). characteristics properties size (m^2), asking price (euros), price per square meter, age (years) shortest distance metro/train station (m).  Now going create two variables higher, municipality department, level. first one population density per 10k citizens, second one percentage non EU citizens. next step create model data going use hsar model. , need property (lower data), data relevant department(higher level). now, know property, department resides coresponding data polygon. also need data sorting order.","code":"data(depmunic) data(properties) plot(st_geometry(depmunic),col = sf.colors(12, categorical = TRUE), border = 'grey') plot(st_geometry(properties),add=TRUE,col=\"red\",pch=16,cex=0.6) names(depmunic) ## [1] \"num_dep\"    \"airbnb\"     \"museums\"    \"population\" \"pop_rest\"   \"greensp\"    \"area\"       ## [8] \"geometry\" depmunic$pop_rest ## [1]  8202  5009  2735  4167  5099 16531  8017 names(properties) ## [1] \"id\"         \"size\"       \"price\"      \"prpsqm\"     \"age\"        \"dist_metro\" \"geometry\" hist(properties$age, xlab = \"Age\", main=\"Age of the properties\") depmunic$popdens <- depmunic$population/ (10000*depmunic$area) depmunic$foreigners <- 100 * depmunic$pop_rest/ depmunic$population properties_in_dd <- st_join(properties, depmunic, join = st_within) model.data <- properties_in_dd[order(properties_in_dd$num_dep),]"},{"path":"https://spatlyu.github.io/HSAR/articles/hsar.html","id":"create-matrices-used-in-the-hsar-function","dir":"Articles","previous_headings":"An application of HSAR for asking prices in the municipality of Athens","what":"Create matrices used in the hsar function","title":"Hierarchical Spatial Simultaneous Autoregressive Model (HSAR)","text":"order run model need create effect design matrix (Delta), weight matrix high-level - polygon data (M), weight matrix lower level - point data (W). order define random effect matrix, start estimating number properties municipality department geting total number municipality departments (7), define vector number municipality department property belongs define random effect matrix (Delta) wich dimension 1000x7 Now estimate spatial weight matrix higher level case municipality departments (polygons). start poly2nb constructs neighbours list polygons nb2mat generate weight matrix neighbours list previously created. transform weight matrix sparse matrix format. closer look M , can visualize  Similarly, create spatial weight matrix lower level properties (point data). create neighbour list distance 1300 meters weights matrix W follows W matrix, can check neighbours statistics","code":"properties_count <- count(as_tibble(model.data), num_dep) MM <- as.data.frame(properties_count) Utotal <- dim(MM)[1] Unum <- MM[,2] Uid <- rep(c(1:Utotal),Unum) n <- nrow(properties) Delta <- matrix(0,nrow=n,ncol=Utotal) for(i in 1:Utotal) {   Delta[Uid==i,i] <- 1 }  Delta <- as(Delta,\"dgCMatrix\") nb.list <- poly2nb(depmunic) mat.list <- nb2mat(nb.list,style=\"W\") M <- as(mat.list,\"dgCMatrix\") plot(st_geometry(depmunic),border = 'grey') plot(st_centroid(depmunic), add = TRUE) ## Warning: st_centroid assumes attributes are constant over geometries ## Warning in plot.sf(st_centroid(depmunic), add = TRUE): ignoring all but the first attribute plot(nb.list, st_centroid(depmunic), add = TRUE) ## Warning: st_centroid assumes attributes are constant over geometries nb.1300 <- dnearneigh(properties,0,1300) mat.1300 <- nb2mat(nb.1300,style=\"W\") W <- as(mat.1300,\"dgCMatrix\") nb.1300 ## Neighbour list object: ## Number of regions: 1000  ## Number of nonzero links: 170254  ## Percentage nonzero weights: 17.0254  ## Average number of links: 170.254"},{"path":"https://spatlyu.github.io/HSAR/articles/hsar.html","id":"run-the-models","dir":"Articles","previous_headings":"An application of HSAR for asking prices in the municipality of Athens","what":"Run the models","title":"Hierarchical Spatial Simultaneous Autoregressive Model (HSAR)","text":", ready matrices Delta, M W, wun hsar() function two simpler models defined rho = 0 lambda=0. , firstly, assuming rho = 0 (interaction effects lower level) get secondly, given lambda = 0 (interaction higher level) get","code":"res.formula <- prpsqm ~ size + age + greensp + population + museums + airbnb res <- hsar(res.formula,data=model.data,W=W,M=M,Delta=Delta,             burnin=500, Nsim=1000) ## Warning in spdep::mat2listw(W): style is M (missing); style should be set to a valid value ## Warning in sn2listw(df, style = style, zero.policy = zero.policy, from_mat2listw = TRUE): style is ## M (missing); style should be set to a valid value ## Warning in spdep::mat2listw(W): style is M (missing); style should be set to a valid value ## Warning in sn2listw(df, style = style, zero.policy = zero.policy, from_mat2listw = TRUE): style is ## M (missing); style should be set to a valid value summary(res) ##  ## Call: ## hsar(formula = res.formula, data = model.data, W = W, M = M,  ##     Delta = Delta, burnin = 500, Nsim = 1000) ## Type:  hsar   ##  ## Coefficients: ##                      Mean           SD ## (Intercept)  1.880461e+03 9.794419e+00 ## size         4.301935e+00 4.713561e-01 ## age         -1.991273e+01 1.339089e+00 ## greensp      7.790633e-04 7.862559e-04 ## population  -9.240542e-03 2.397341e-03 ## museums     -4.531282e+01 1.033345e+01 ## airbnb       5.803532e-01 2.232756e-01 ##  ##  Spatial Coefficients: ##           rho   lambda ## [1,] 0.201284 0.195202 ##  ##  Diagnostics  ## Deviance information criterion (DIC): 28197.36  ## Effective number of parameters (pd): -1.635173  ## Log likelihood: -14100.32  ## Pseudo R squared: 0.3587075  ##  ##  Impacts: ##                    direct      indirect         total ## (Intercept)  1.881108e+03  4.730904e+02  2.354198e+03 ## size         4.303415e+00  1.082290e+00  5.385706e+00 ## age         -1.991958e+01 -5.009688e+00 -2.492927e+01 ## greensp      7.793313e-04  1.959984e-04  9.753297e-04 ## population  -9.243721e-03 -2.324756e-03 -1.156848e-02 ## museums     -4.532841e+01 -1.139990e+01 -5.672831e+01 ## airbnb       5.805528e-01  1.460065e-01  7.265593e-01 ##  ##  Quantiles: ##                        5%           25%           50%           75%           95% ## (Intercept)  1.863987e+03  1.874152e+03  1.881128e+03  1.887705e+03  1.894747e+03 ## size         3.501653e+00  3.996034e+00  4.328532e+00  4.625902e+00  5.033293e+00 ## age         -2.205857e+01 -2.086760e+01 -1.991433e+01 -1.902301e+01 -1.773964e+01 ## greensp     -2.238065e-04  2.536224e-04  6.319674e-04  1.162900e-03  2.560007e-03 ## population  -1.313017e-02 -1.086792e-02 -9.282930e-03 -7.491176e-03 -5.489072e-03 ## museums     -6.251765e+01 -5.195792e+01 -4.486279e+01 -3.794775e+01 -2.997397e+01 ## airbnb       1.780049e-01  4.327122e-01  6.070358e-01  7.323369e-01  9.083725e-01 res_1 <- hsar(res.formula,data=model.data,W=NULL,M=M,Delta=Delta,burnin=500, Nsim=1000) ## Warning in spdep::mat2listw(W): style is M (missing); style should be set to a valid value ## Warning in sn2listw(df, style = style, zero.policy = zero.policy, from_mat2listw = TRUE): style is ## M (missing); style should be set to a valid value summary(res_1) ##  ## Call: ## hsar(formula = res.formula, data = model.data, W = NULL, M = M,  ##     Delta = Delta, burnin = 500, Nsim = 1000) ## Type:  hsar with rho = 0   ##  ## Coefficients: ##                      Mean           SD ## (Intercept)  1.880969e+03 1.004751e+01 ## size         4.299105e+00 4.215697e-01 ## age         -1.996865e+01 1.310667e+00 ## greensp      5.304726e-04 6.544811e-04 ## population  -6.654456e-03 1.060707e-03 ## museums     -4.511823e+01 9.175141e+00 ## airbnb       7.234227e-01 2.314932e-01 ##  ##  Spatial Coefficients: ##   lambda  ## 0.070876  ##  ##  Diagnostics  ## Deviance information criterion (DIC): 28198.46  ## Effective number of parameters (pd): -1.870333  ## Log likelihood: -14101.1  ## Pseudo R squared: 0.3582752  ##  ##  Quantiles: ##                        5%           25%           50%           75%           95% ## (Intercept)  1.864880e+03  1.874552e+03  1.880957e+03  1.887456e+03  1.897001e+03 ## size         3.610783e+00  4.006603e+00  4.322592e+00  4.583691e+00  4.983597e+00 ## age         -2.207850e+01 -2.087071e+01 -1.995724e+01 -1.901799e+01 -1.790105e+01 ## greensp     -6.921436e-04  1.703272e-04  5.736104e-04  9.622126e-04  1.489968e-03 ## population  -8.359189e-03 -7.311060e-03 -6.666792e-03 -5.998892e-03 -4.847390e-03 ## museums     -6.003316e+01 -5.108847e+01 -4.522155e+01 -3.899018e+01 -2.960428e+01 ## airbnb       3.630902e-01  5.791529e-01  7.000081e-01  8.588804e-01  1.159867e+00 res_2 <- hsar(res.formula,data=model.data,W=W,M=NULL,Delta=Delta,burnin=500, Nsim=1000) ## Warning in spdep::mat2listw(W): style is M (missing); style should be set to a valid value ## Warning in sn2listw(df, style = style, zero.policy = zero.policy, from_mat2listw = TRUE): style is ## M (missing); style should be set to a valid value summary(res_2) ##  ## Call: ## hsar(formula = res.formula, data = model.data, W = W, M = NULL,  ##     Delta = Delta, burnin = 500, Nsim = 1000) ## Type:  hsar with lambda = 0   ##  ## Coefficients: ##                      Mean          SD ## (Intercept)  1.880360e+03 9.638392003 ## size         4.274640e+00 0.475946778 ## age         -2.000767e+01 1.416531702 ## greensp      8.151624e-05 0.001316126 ## population  -8.668497e-03 0.002604684 ## museums     -4.511405e+01 9.814353408 ## airbnb       6.302068e-01 0.318353574 ##  ##  Spatial Coefficients: ##      rho  ## 0.189216  ##  ##  Diagnostics  ## Deviance information criterion (DIC): 28196.66  ## Effective number of parameters (pd): -1.67705  ## Log likelihood: -14100.01  ## Pseudo R squared: 0.3591423  ##  ##  Quantiles: ##                        5%           25%           50%           75%           95% ## (Intercept) 1864.24515875  1.873775e+03  1.880736e+03  1.886645e+03  1.895744e+03 ## size           3.50820040  3.921107e+00  4.282089e+00  4.580065e+00  5.067648e+00 ## age          -22.32636764 -2.097454e+01 -1.997216e+01 -1.902378e+01 -1.763772e+01 ## greensp       -0.00297142 -2.411191e-04  5.260136e-04  9.078372e-04  1.450913e-03 ## population    -0.01257212 -1.045538e-02 -8.815213e-03 -7.081089e-03 -4.074837e-03 ## museums      -61.04617221 -5.171848e+01 -4.530204e+01 -3.812907e+01 -2.869411e+01 ## airbnb         0.20185017  4.330003e-01  5.837671e-01  7.511525e-01  1.288780e+00"},{"path":"https://spatlyu.github.io/HSAR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Guanpeng Dong. Author, copyright holder. Wenbo Lv. Author, maintainer. Richard Richard. Author. Angelos Mimis. Author.","code":""},{"path":"https://spatlyu.github.io/HSAR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dong, Guanpeng, Harris, Richard (2014). “Spatial Autoregressive Models Geographically Hierarchical Data Structures.” Geographical Analysis, 47(2), 173–191. doi:10.1111/gean.12049.","code":"@Article{,   title = {Spatial Autoregressive Models for Geographically Hierarchical Data Structures},   journal = {Geographical Analysis},   volume = {47},   number = {2},   pages = {173–191},   year = {2014},   publisher = {Wiley},   author = {{Dong} and {Guanpeng} and {Harris} and {Richard}},   doi = {10.1111/gean.12049}, }"},{"path":"https://spatlyu.github.io/HSAR/index.html","id":"hsar","dir":"","previous_headings":"","what":"Hierarchical Spatial Autoregressive Model","title":"Hierarchical Spatial Autoregressive Model","text":"Hierarchical Spatial Simultaneous Autoregressive Model (HSAR)","code":""},{"path":"https://spatlyu.github.io/HSAR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hierarchical Spatial Autoregressive Model","text":"Install CRAN : Install development binary version R-universe : Install development source version GitHub :","code":"install.packages(\"HSAR\", dep = TRUE) install.packages('HSAR',                  repos = c(\"https://spatlyu.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE) if (!requireNamespace(\"devtools\")) {     install.packages(\"devtools\") } devtools::install_github(\"SpatLyu/HSAR\",                          build_vignettes = TRUE,                          dep = TRUE)"},{"path":"https://spatlyu.github.io/HSAR/reference/Beijingdistricts.html","id":null,"dir":"Reference","previous_headings":"","what":"Boundaries of districts in Beijing — Beijingdistricts","title":"Boundaries of districts in Beijing — Beijingdistricts","text":"Boundaries districts Beijing","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/Beijingdistricts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boundaries of districts in Beijing — Beijingdistricts","text":"","code":"Beijingdistricts"},{"path":"https://spatlyu.github.io/HSAR/reference/Beijingdistricts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Boundaries of districts in Beijing — Beijingdistricts","text":"object class sf (inherits data.frame) 111 rows 2 columns.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/depmunic.html","id":null,"dir":"Reference","previous_headings":"","what":"Municipality departments of Athens — depmunic","title":"Municipality departments of Athens — depmunic","text":"Municipality departments Athens","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/depmunic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Municipality departments of Athens — depmunic","text":"","code":"depmunic"},{"path":"https://spatlyu.github.io/HSAR/reference/depmunic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Municipality departments of Athens — depmunic","text":"object class sf (inherits data.frame) 7 rows 8 columns.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/depmunic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Municipality departments of Athens — depmunic","text":"sf object 7 polygons following 7 variables: num_dep unique identifier municipality department. airbnb number airbnb properties 2017 museums number museums population population recorded census 2011. pop_rest number citizens origin non european country. greensp area green spaces (unit: square meters). area area polygon (unit: square kilometers).","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/hsar.html","id":null,"dir":"Reference","previous_headings":"","what":"Hierarchical SAR model estimation — hsar","title":"Hierarchical SAR model estimation — hsar","text":"specification HSAR model follows: $$y_{,j} = \\rho *\\mathbf{W}_i *\\mathbf{y} + \\mathbf{x}^\\prime_{,j} * \\mathbf{\\beta} +    \\mathbf{z}^\\prime_j * \\mathbf{\\gamma} + \\theta_j + \\epsilon_{,j}  $$ $$\\theta_j = \\lambda * \\mathbf{M}_j * \\mathbf{\\theta} + \\mu_j  $$ $$\\epsilon_{,j} \\sim N(0,\\sigma_e^2), \\hspace{2cm} \\mu_j \\sim N(0,\\sigma_u^2)$$ \\(=1,2,...,n_j\\) \\(j=1,2,...,J\\) indicators lower- higher-level spatial units. \\(n_j\\) number lower-level units \\(j-th\\) higher level unit \\(\\sum_{j=1}^J=\\mathbf{N}\\). \\(\\mathbf{x}^\\prime_{,j}\\) \\(\\mathbf{z}^\\prime_j\\) represent vectors lower- higher-level independent variables. \\(\\mathbf{\\beta}\\) \\(\\mathbf{\\gamma}\\) regression coefficients estimate. \\(\\mathbf{\\theta}\\), \\(N \\times J\\) vector higher-level random effects, also follows simultaneous autoregressive process. \\(\\mathbf{W}\\) \\(\\mathbf{M}\\) two spatial weights matrices (neighbourhood connection matrices) lower higher levels, defining spatial units level connected. \\(\\rho\\) \\(\\lambda\\) two spatial autoregressive parameters measuring strength dependencies/correlations two spatial scales. succinct matrix formulation model , $$\\mathbf{y} = \\rho * \\mathbf{W} * \\mathbf{y} + \\mathbf{X} * \\mathbf{\\beta} +    \\mathbf{Z} * \\mathbf{\\gamma} + \\Delta * \\mathbf{\\theta} + \\mathbf{\\epsilon} $$ $$\\mathbf{\\theta} = \\lambda * \\mathbf{M} * \\mathbf{\\theta} + \\mathbf{\\mu}$$ also useful note HSAR model nests standard (random intercept) multilevel model model \\(\\rho\\) \\(\\lambda\\) equal zero standard spaital econometric model \\(\\lambda\\) \\(\\sigma^2_u\\) equal zero.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/hsar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hierarchical SAR model estimation — hsar","text":"","code":"hsar(   formula,   data = NULL,   W = NULL,   M = NULL,   Delta,   burnin = 5000,   Nsim = 10000,   thinning = 1,   parameters.start = NULL )"},{"path":"https://spatlyu.github.io/HSAR/reference/hsar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hierarchical SAR model estimation — hsar","text":"formula symbolic description model fit. formula covariate part model using syntax lm() function fitting standard linear regression models. Neither response variable explanatory variables allowed contain NA values. data data.frame containing variables used formula object. W N N lower-level spatial weights matrix neighbourhood matrix N total number lower-level spatial units. formulation W based geographical distances separating units based geographical contiguity. ensure maximum value spatial autoregressive parameter \\(\\rho\\) less 1, W row-normalised running HSAR model. cases, spatial weights matrix sparse, therefore W converted sparse matrix imported hsar() function save computational burden reduce computing time. specifically, W column-oriented numeric sparse matrices dgCMatrix class defined Matrix package. converion dense numeric matrix sparse numeric matrix made quite convenient Matrixlibrary. M J J higher-level spatial weights matrix neighbourhood matrix J total number higher-level spatial units. Similar W, formulation M based geographical distances separating units based geographical contiguity. ensure maximum value spatial autoregressive parameter \\(\\lambda\\) less 1, M also row-normalised running HSAR model. W, M also column-oriented numeric sparse matrices. Delta N J random effect design matrix links J 1 higher-level random effect vector back N 1 response variable investigation. simply lower-level units grouped high-level units columns matrix higher-level units. W M, \\(\\delta\\) also column-oriented numeric sparse matrices. burnin number MCMC samples discard burnin period. Nsim total number MCMC samples generate. thinning MCMC thinning factor. parameters.start list names \"rho\", \"lambda\", \"sigma2e\", \"sigma2u\" \"beta\" corresponding initial values model parameters \\(\\rho, \\lambda, \\sigma^2_e, \\sigma^2_u\\) regression coefficients respectively.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/hsar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hierarchical SAR model estimation — hsar","text":"list. cbetas matrix MCMC samples draws coefficients. Mbetas vector estimated mean values regression coefficients. SDbetas standard deviations estimated regression coefficients. Mrho estimated mean lower-level spatial autoregressive parameter \\(\\rho\\). SDrho standard deviation estimated lower-level spatial autoregressive parameter. Mlamda estimated mean higher-level spatial autoregressive parameter \\(\\lambda\\). SDlambda standard deviation estimated higher-level spatial autoregressive parameter. Msigma2e estimated mean lower-level variance parameter \\(\\sigma^2_e\\). SDsigma2e standard deviation estimated lower-level variance parameter \\(\\sigma^{2}_{e} \\). Msigma2u estimated mean higher-level variance parameter \\(\\sigma^2_u\\). SDsigma2u standard deviation estimated higher-level variance parameter \\(\\sigma^2_u\\). Mus Mean values \\(\\theta\\) SDus Standard deviation \\(\\theta\\) DIC deviance information criterion (DIC) fitted model. pd effective number parameters fitted model. Log_Likelihood log-likelihood fitted model. R_Squared pseudo R square model fit indicator. impact_direct Summaries direct impact covariate effect outcome variable. impact_idirect Summaries indirect impact covariate effect outcome variable. impact_total Summaries total impact covariate effect outcome variable.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/hsar.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Hierarchical SAR model estimation — hsar","text":"order use hsar() function, users need specify two spatial weights matrices W M random effect design matrix \\(\\delta\\). However, easy extract spatial weights matrices spatial data using package spdep. Geographic distance-based contiguity-based spatial weights matrix spatial points data spatial polygons data available spdep package. extraction W M, better first sort data using higher-level unit identifier. , random effect design matrix can extracted simply (see following example) two spatial weights matrices. Make sure order higher-level units weights matrix M line \\(\\delta\\) matrix. Two simpler versions HSAR model can also fitted using hsar() function. first HSAR model \\(\\lambda\\) equal zero, indicating assumption independence higher-level random effect \\(\\mathbf{\\theta}\\). second HSAR \\(\\rho\\) equal zero, indicating independence assumption outcome variable conditioning hgiher-level random effect. model useful situations interested neighbourhood/contextual effect individual's outcomes good reasons suspect effect geographical contexts upon individuals dependent. Meanwhile information lower-level units connnected.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/hsar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hierarchical SAR model estimation — hsar","text":"Dong, G. Harris, R. 2015. Spatial Autoregressive Models Geographically Hierarchical Data Structures. Geographical Analysis, 47:173-191. LeSage, J. P., R. K. Pace. (2009). Introduction Spatial Econometrics. Boca Raton, FL: CRC Press/Taylor & Francis.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/hsar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hierarchical SAR model estimation — hsar","text":"","code":"library(spdep) #> Loading required package: spData #> To access larger datasets in this package, install the spDataLarge #> package with: `install.packages('spDataLarge', #> repos='https://nowosad.github.io/drat/', type='source')` #> Loading required package: sf #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE  # Running the hsar() function using the Beijing land price data data(landprice)  # load shapefiles of Beijing districts and land parcels data(Beijingdistricts) data(land)  plot(Beijingdistricts,border=\"green\") plot(land,add=TRUE,col=\"red\",pch=16,cex=0.8) #> Warning: ignoring all but the first attribute   # Define the random effect matrix model.data <- landprice[order(landprice$district.id),] head(model.data,50) #>     obs lnprice   lnarea  lndcbd dsubway   dpark    dele   popden crimerate #> 1   190 7.16382 11.58780 9.93534 7.14334 6.78243 6.67827 0.548966  10.75110 #> 2   992 7.45757  9.20029 9.84785 7.78904 6.95662 7.05138 0.548966  10.75110 #> 3   189 5.57430 10.27820 9.94866 6.83023 7.06579 6.81916 0.548966  10.75110 #> 4   993 7.12569  7.97788 9.84388 7.81991 7.00792 7.11267 0.548966  10.75110 #> 5   969 6.81564  5.81928 9.91940 7.64640 6.88254 4.10025 0.548966  10.75110 #> 6   994 7.48522  7.78634 9.84203 7.83398 7.03089 7.13981 0.548966  10.75110 #> 7   968 7.61282  8.94551 9.91779 7.64360 6.84364 4.60356 0.548966  10.75110 #> 8  1001 5.87349 10.70910 9.95534 7.89121 7.11019 5.67984 0.548966  10.75110 #> 9   970 6.93528  7.71869 9.91752 7.65810 6.86760 4.53460 0.548966  10.75110 #> 10  990 7.33226  9.56638 9.92978 7.04352 7.14927 6.05410 1.407250   2.25832 #> 11  184 7.63495  8.28041 9.92761 6.72229 6.50598 6.10753 1.407250   2.25832 #> 12  991 7.71761  9.11156 9.91618 7.18259 7.07855 6.16031 1.407250   2.25832 #> 13  183 6.79302  6.39403 9.92025 6.76006 6.23524 6.10494 1.407250   2.25832 #> 14  975 6.44927  7.76908 9.92113 6.89202 6.38918 5.88140 1.407250   2.25832 #> 15  510 8.36696  9.86256 9.89898 7.34607 7.10587 6.61334 1.407250   2.25832 #> 16  976 7.26088  6.53771 9.92084 6.96297 6.45627 5.63952 1.407250   2.25832 #> 17  305 6.57806 10.32370 9.70741 7.18129 7.95357 6.68403 0.941242   0.00000 #> 18   48 8.94133  8.89344 9.76620 6.57319 7.46929 7.09027 0.941242   0.00000 #> 19  544 5.76832  7.56743 9.68472 7.07977 8.05148 5.94517 0.941242   0.00000 #> 20 1002 5.91562  9.84392 9.74486 7.08293 7.92710 5.87879 2.866570   2.08476 #> 21 1003 5.85396  9.57639 9.74538 7.19933 7.96247 6.22910 2.866570   2.08476 #> 22  191 7.04490 10.48240 9.75845 7.14172 7.86279 6.09166 2.866570   2.08476 #> 23 1004 7.22372 10.23640 9.70496 7.63960 8.26740 7.16855 2.866570   2.08476 #> 24  187 7.46123  9.15915 9.71533 7.57044 8.21326 7.11444 2.866570   2.08476 #> 25  995 6.16533  9.13465 9.64341 6.36002 8.27941 6.92502 2.866570   2.08476 #> 26  640 9.65128 11.31550 9.71856 6.64810 7.96881 6.00015 2.866570   2.08476 #> 27  185 6.75336 11.54640 9.72137 6.40432 7.92675 6.01485 2.866570   2.08476 #> 28  186 6.75782  9.88451 9.71611 7.62061 8.23178 7.18594 2.866570   2.08476 #> 29  542 6.81431  8.54922 9.63861 7.18116 8.37391 6.38286 2.866570   2.08476 #> 30  165 7.80049  9.00639 9.15882 7.95475 7.32233 6.79457 2.296760   8.92581 #> 31  155 8.45877  9.14783 9.12435 7.70243 7.12462 6.95931 2.296760   8.92581 #> 32  157 8.45267  8.09617 9.12652 7.65767 7.06754 6.98893 2.296760   8.92581 #> 33   79 8.56406  5.29616 9.12581 7.77669 7.20131 6.83696 2.296760   8.92581 #> 34  112 8.41125  7.89692 9.02285 7.52898 7.60357 5.66579 2.296760   8.92581 #> 35  158 8.92698  8.33687 9.13184 7.64895 7.02301 7.02868 2.296760   8.92581 #> 36  884 7.55678  7.85011 9.11186 7.81621 7.34735 6.58003 2.296760   8.92581 #> 37    1 8.63880 10.97180 9.03807 7.38706 7.50760 5.61153 2.296760   8.92581 #> 38  164 7.53140 10.01800 9.01294 7.72827 7.64932 5.87202 2.296760   8.92581 #> 39  174 8.22883  9.48070 9.02293 7.48346 7.59182 5.40304 2.296760   8.92581 #> 40  547 9.52909  4.72180 9.18782 8.13285 7.56351 6.35573 2.296760   8.92581 #> 41  156 8.25099  8.96954 9.13146 7.77387 7.16582 6.88552 2.296760   8.92581 #> 42    3 8.11774  9.87884 8.80295 6.76108 5.51591 6.37044 2.625880   2.29662 #> 43  605 7.27915  8.22380 9.00097 5.75406 7.23258 5.80163 2.625880   2.29662 #> 44  137 8.00299  9.20029 8.87777 6.87581 5.62608 5.89557 2.625880   2.29662 #> 45  606 7.05708  9.72113 8.97459 6.19309 7.07984 5.47498 2.625880   2.29662 #> 46   41 9.08469  8.68191 8.50677 4.63046 7.44178 5.96059 1.393050   2.62490 #> 47  138 6.44894  9.42679 8.44812 6.33522 7.36762 5.69235 1.393050   2.62490 #> 48  621 7.87562  3.94158 8.31624 5.63957 7.06336 5.59615 1.393050   2.62490 #> 49  143 8.37008  9.21999 8.39678 6.29016 7.25234 5.99851 1.393050   2.62490 #> 50  147 9.51180  8.13649 8.46924 5.50417 7.35118 5.25879 1.393050   2.62490 #>    district.id year #> 1            3    1 #> 2            3    0 #> 3            3    1 #> 4            3    0 #> 5            3    0 #> 6            3    0 #> 7            3    0 #> 8            3    0 #> 9            3    0 #> 10           5    0 #> 11           5    1 #> 12           5    0 #> 13           5    1 #> 14           5    0 #> 15           5    6 #> 16           5    0 #> 17           7    1 #> 18           7    3 #> 19           7    4 #> 20           8    0 #> 21           8    0 #> 22           8    1 #> 23           8    0 #> 24           8    1 #> 25           8    0 #> 26           8    5 #> 27           8    1 #> 28           8    1 #> 29           8    4 #> 30           9    1 #> 31           9    1 #> 32           9    1 #> 33           9    2 #> 34           9    2 #> 35           9    1 #> 36           9    0 #> 37           9    3 #> 38           9    1 #> 39           9    1 #> 40           9    4 #> 41           9    1 #> 42          10    3 #> 43          10    5 #> 44          10    1 #> 45          10    5 #> 46          11    3 #> 47          11    1 #> 48          11    5 #> 49          11    1 #> 50          11    1  # the number of individuals within each neighbourhood MM <- as.data.frame(table(model.data$district.id)) # the total number of neighbourhood, 100 Utotal <- dim(MM)[1] Unum <- MM[,2] Uid <- rep(c(1:Utotal),Unum)  n <- nrow(model.data) Delta <- matrix(0,nrow=n,ncol=Utotal) for(i in 1:Utotal) {   Delta[Uid==i,i] <- 1 } rm(i) # Delta[1:50,1:10] Delta <- as(Delta,\"dgCMatrix\")  # extract the district level spatial weights matrix using the queen's rule nb.list <- spdep::poly2nb(Beijingdistricts) mat.list <- spdep::nb2mat(nb.list,style=\"W\") M <- as(mat.list,\"dgCMatrix\")  # extract the land parcel level spatial weights matrix nb.25 <- spdep::dnearneigh(land,0,2500) #> Warning: neighbour object has 4 sub-graphs # to a weights matrix dist.25 <- spdep::nbdists(nb.25,land) dist.25 <- lapply(dist.25,function(x) exp(-0.5 * (x / 2500)^2)) mat.25 <- spdep::nb2mat(nb.25,glist=dist.25,style=\"W\") W <- as(mat.25,\"dgCMatrix\")   ## run the hsar() function res.formula <- lnprice ~ lnarea + lndcbd + dsubway + dpark + dele +   popden + crimerate + as.factor(year)  betas= coef(lm(formula=res.formula,data=landprice)) pars=list( rho = 0.5,lambda = 0.5, sigma2e = 2.0, sigma2u = 2.0, betas = betas )  if (FALSE) { # \\dontrun{   res <- hsar(res.formula,data=model.data,W=W,M=M,Delta=Delta,               burnin=500, Nsim=1000, thinning = 1, parameters.start=pars)   summary(res)    # visualise the district level random effect   library(classInt)   library(RColorBrewer)   x <- as.numeric(res$Mus)   breaks <- classIntervals(x,4,\"fisher\")$brks   groups <- cut(x,breaks,include.lowest=TRUE,labels=FALSE)   palette <- brewer.pal(4, \"Blues\")   plot(Beijingdistricts,col=palette[groups],border=\"grey\") } # }"},{"path":"https://spatlyu.github.io/HSAR/reference/land.html","id":null,"dir":"Reference","previous_headings":"","what":"The spatial locations of the Beijing land price data — land","title":"The spatial locations of the Beijing land price data — land","text":"spatial locations Beijing land price data","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/land.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The spatial locations of the Beijing land price data — land","text":"","code":"land"},{"path":"https://spatlyu.github.io/HSAR/reference/land.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The spatial locations of the Beijing land price data — land","text":"object class sf (inherits data.frame) 1117 rows 3 columns.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/landprice.html","id":null,"dir":"Reference","previous_headings":"","what":"Leased residential land parcels, from 2003 to 2009 in Beijing, China — landprice","title":"Leased residential land parcels, from 2003 to 2009 in Beijing, China — landprice","text":"Leased residential land parcels, 2003 2009 Beijing, China","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/landprice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leased residential land parcels, from 2003 to 2009 in Beijing, China — landprice","text":"","code":"landprice"},{"path":"https://spatlyu.github.io/HSAR/reference/landprice.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Leased residential land parcels, from 2003 to 2009 in Beijing, China — landprice","text":"object class data.frame 1117 rows 11 columns.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/landprice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Leased residential land parcels, from 2003 to 2009 in Beijing, China — landprice","text":"data.frame 1117 observations following 11 variables. obs unique identifier land parcel. lnprice log leasing price per square metre residential land parcel (unit: RMB, Chinese yuan) dsubway log distance land parcel nearest railway station (unit:meters) dele log distance land parcel nearest elementary school (unit:meters) dpark log distance land parcel nearest green park (unit:meters) lnarea log size land parcel (unit: square meters). lndcbd log distance land parcel CBD (centre business district) Beijing (unit:meters) year year land parcel leased values 0,1,2,3,4,5,6 representing year 2003,2004,2005,2006,2007,2008,2009 popden population density district (unit: 1000 persons per square kilometers) crimerate number reported serious crimes committed district per 1000 persons. district.id identifier district land parcel located.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of properties in the municipality of Athens — properties","title":"Dataset of properties in the municipality of Athens — properties","text":"dataset apartments municipality Athens 2017. Point location properties given together main characteristics distance closest metro/train station.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset of properties in the municipality of Athens — properties","text":"","code":"properties"},{"path":"https://spatlyu.github.io/HSAR/reference/properties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset of properties in the municipality of Athens — properties","text":"object class sf (inherits data.frame) 1000 rows 7 columns.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/properties.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dataset of properties in the municipality of Athens — properties","text":"sf object 1000 points following 6 variables. id unique identifier property. size size property (unit: square meters) price asking price (unit: euros) prpsqm asking price per squre meter (unit: euroes/square meter). age Age property 2017 (unit: years). dist_metro distance closest train/metro station (unit: meters).","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/sar.html","id":null,"dir":"Reference","previous_headings":"","what":"SAR model estimation — sar","title":"SAR model estimation — sar","text":"sar() function implements standard spatial econometrics model (SAR) spatially lagged dependent variable model using Markov chain Monte Carlo (McMC) simulation approach.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/sar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SAR model estimation — sar","text":"","code":"sar(   formula,   data = NULL,   W,   burnin = 5000,   Nsim = 10000,   thinning = 1,   parameters.start = NULL )"},{"path":"https://spatlyu.github.io/HSAR/reference/sar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SAR model estimation — sar","text":"formula symbolic description model fit. formula covariate part model using syntax stats::lm() function fitting standard linear regression models. Neither response variable explanatory variables allowed contain NA values. data data.frame containing variables used formula object. W N N spatial weights matrix neighbourhood matrix N number spatial units. formulation W based geographical distances separating units based geographical contiguity. ensure maximum value spatial autoregressive parameter \\(\\rho\\) less 1, W usually row-normalised implementing SAR model. cases, spatial weights matrix sparse, therefore W converted sparse matrix imported sar() function save computational burden reduce computing time. specifically, W column-oriented numeric sparse matrices dgCMatrix class defined Matrix package. converion dense numeric matrix sparse numeric matrix made quite convenient Matrix library. burnin number McMC samples discard burnin period. Nsim total number McMC samples generate. thinning MCMC thinning factor. parameters.start list names \"rho\", \"sigma2e\", \"beta\" corresponding initial values model parameters \\(\\rho, \\sigma^2_e\\) regression coefficients respectively.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/sar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SAR model estimation — sar","text":"list. cbetas matrix MCMC samples draws coefficients. Mbetas vector estimated mean values regression coefficients. SDbetas standard deviations estimated regression coefficients. Mrho estimated mean lower-level spatial autoregressive parameter \\(\\rho\\). SDrho standard deviation estimated lower-level spatial autoregressive parameter. Msigma2e estimated mean lower-level variance parameter \\(\\sigma^{2}_{e} \\). SDsigma2e standard deviation estimated lower-level variance parameter \\(\\sigma^{2}_{e} \\). DIC deviance information criterion (DIC) fitted model. pd effective number parameters fitted model. Log_Likelihood log-likelihood fitted model. R_Squared pseudo R square model fit indicator. impact_direct Summaries direct impact covariate effect outcome variable. impact_idirect Summaries indirect impact covariate effect outcome variable. impact_total Summaries total impact covariate effect outcome variable.","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/sar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SAR model estimation — sar","text":"Anselin, L. (1988). Spatial Econometrics: Methods Models. Dordrecht: Kluwer Academic Publishers. LeSage, J. P., R. K. Pace. (2009). Introduction Spatial Econometrics. Boca Raton, FL: CRC Press/Taylor & Francis","code":""},{"path":"https://spatlyu.github.io/HSAR/reference/sar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SAR model estimation — sar","text":"","code":"data(landprice) head(landprice) #>   obs lnprice   lnarea  lndcbd dsubway   dpark    dele   popden crimerate #> 1 190 7.16382 11.58780 9.93534 7.14334 6.78243 6.67827 0.548966   10.7511 #> 2 992 7.45757  9.20029 9.84785 7.78904 6.95662 7.05138 0.548966   10.7511 #> 3 189 5.57430 10.27820 9.94866 6.83023 7.06579 6.81916 0.548966   10.7511 #> 4 993 7.12569  7.97788 9.84388 7.81991 7.00792 7.11267 0.548966   10.7511 #> 5 969 6.81564  5.81928 9.91940 7.64640 6.88254 4.10025 0.548966   10.7511 #> 6 994 7.48522  7.78634 9.84203 7.83398 7.03089 7.13981 0.548966   10.7511 #>   district.id year #> 1           3    1 #> 2           3    0 #> 3           3    1 #> 4           3    0 #> 5           3    0 #> 6           3    0 data(land)  # extract the land parcel level spatial weights matrix library(spdep) library(Matrix) nb.25 <- spdep::dnearneigh(land,0,2500) #> Warning: neighbour object has 4 sub-graphs # to a weights matrix dist.25 <- spdep::nbdists(nb.25,land) dist.25 <- lapply(dist.25,function(x) exp(-0.5 * (x / 2500)^2)) mat.25 <- spdep::nb2mat(nb.25,glist=dist.25,style=\"W\") W <- as(mat.25,\"dgCMatrix\")  ## run the sar() function res.formula <- lnprice ~ lnarea + lndcbd + dsubway + dpark + dele +                 popden + crimerate + as.factor(year) betas= coef(lm(formula=res.formula,data=landprice)) pars=list(rho = 0.5, sigma2e = 2.0, betas = betas) if (FALSE) { # \\dontrun{ res <- sar(res.formula,data=landprice,W=W,            burnin=500, Nsim=1000, thinning=1,            parameters.start=pars) summary(res) } # }"},{"path":"https://spatlyu.github.io/HSAR/news/index.html","id":"hsar-060","dir":"Changelog","previous_headings":"","what":"HSAR 0.6.0","title":"HSAR 0.6.0","text":"Resolve CRAN check issues HASR resubmit CRAN.","code":""}]
